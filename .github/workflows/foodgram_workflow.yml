name: Foodgram workflow 
 
on: [push]
 
jobs: 
  tests: 
    name: Backend testing 
    runs-on: ubuntu-latest 
    strategy: 
      matrix: 
        python-version: ['3.8', '3.9', '3.10', '3.11'] 
    steps: 
    - uses: actions/checkout@v3 
    - name: Set up ${{ matrix.python-version }} 
      uses: actions/setup-python@v4 
      with: 
        python-version: ${{ matrix.python-version }} 
    - name: Install dependencies 
      run: | 
        python -m pip install --upgrade pip  
        pip install flake8==6.0.0 flake8-isort==6.0.0 
        pip install -r ./backend/foodgram/requirements.txt  
    - name: Test with flake8 and django 
      run: | 
        python -m flake8 backend/ 
   
  build_backend_and_push_to_docker_hub: 
    name: Push backend image to DockerHub 
    runs-on: ubuntu-latest 
    needs: tests 
    steps: 
      - name: Check out the repo 
        uses: actions/checkout@v3 
      - name: Set up Docker Buildx 
        uses: docker/setup-buildx-action@v2 
      - name: Login to Docker  
        uses: docker/login-action@v2 
        with: 
          username: ${{ secrets.DOCKER_USERNAME }} 
          password: ${{ secrets.DOCKER_PASSWORD }} 
      - name: Push to DockerHub 
        uses: docker/build-push-action@v4 
        with: 
          context: ./backend/foodgram/
          push: true 
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest 
        
  build_frontend_and_push_to_docker_hub: 
    name: Push frontend image to DockerHub 
    runs-on: ubuntu-latest 
    steps: 
      - name: Check out the repo 
        uses: actions/checkout@v3 
      - name: Set up Docker Buildx 
        uses: docker/setup-buildx-action@v2 
      - name: Login to Docker  
        uses: docker/login-action@v2 
        with: 
          username: ${{ secrets.DOCKER_USERNAME }} 
          password: ${{ secrets.DOCKER_PASSWORD }} 
      - name: Push to DockerHub 
        uses: docker/build-push-action@v4 
        with: 
          context: ./frontend/ 
          push: true 
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest 
       
  deploy: 
    name: Deploying containerized application 
    runs-on: ubuntu-latest 
    needs:  
      - build_backend_and_push_to_docker_hub 
      - build_frontend_and_push_to_docker_hub 
    steps: 
    - name: Checkout repo 
      uses: actions/checkout@v3 
    - name: Copy docker-compose.yml via ssh 
      uses: appleboy/scp-action@master 
      with: 
        host: ${{ secrets.HOST }} 
        username: ${{ secrets.USER }} 
        key: ${{ secrets.SSH_KEY }} 
        passphrase: ${{ secrets.SSH_PASSPHRASE }} 
        source: "infra/docker-compose.yml" 
        target: "foodgram" 
    - name: Executing remote ssh commands to deploy 
      uses: appleboy/ssh-action@master 
      with: 
        host: ${{ secrets.HOST }} 
        username: ${{ secrets.USER }} 
        key: ${{ secrets.SSH_KEY }} 
        passphrase: ${{ secrets.SSH_PASSPHRASE }} 
        script: | 
          cd foodgram
          sudo mv infra/docker-compose.yml docker-compose.yml
          sudo rm -r infra 
          sudo docker compose -f docker-compose.yml pull 
          sudo docker compose -f docker-compose.yml down 
          sudo docker compose -f docker-compose.yml up -d 
          sudo docker compose -f docker-compose.yml exec backend python manage.py migrate 
          sudo docker compose -f docker-compose.yml exec backend python manage.py collectstatic --no-input
          sudo docker compose -f docker-compose.yml exec backend python manage.py import_csv_data
 
  send_message: 
    name: Telegram message 
    runs-on: ubuntu-latest 
    needs: deploy 
    steps: 
    - name: Send message 
      uses: appleboy/telegram-action@master 
      with: 
        to: ${{ secrets.TELEGRAM_TO }} 
        token: ${{ secrets.TELEGRAM_TOKEN }} 
        message: | 
          ${{ github.actor }} сделал коммит: 
          Комментарий: ${{ github.event.commits[0].message }} 
          Репозиторий: ${{ github.repository }} 
          Все изменения: https://github.com/${{ github.repository }}/commit/${{github.sha}}